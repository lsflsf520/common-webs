<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yisi.stiku.basedata.dao.TbExamPointDao" >
  <resultMap id="BaseResultMap" type="com.yisi.stiku.basedata.entity.TbExamPoint" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="model_count" property="modelCount" jdbcType="INTEGER" />
    <result column="problem_count" property="problemCount" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="stype" property="stype" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="innercode" property="innercode" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="book_point_id" property="bookPointId" jdbcType="BIGINT" />
    <result column="point_domain_id" property="pointDomainId" jdbcType="BIGINT" />
    <result column="acl_code" property="aclCode" jdbcType="VARCHAR" />
    <result column="acl_type" property="aclType" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="updated_dt" property="updatedDt" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="BaseColumnList" >
    id, code, name, model_count, problem_count, type, stype, parent_id, innercode, level, 
    book_point_id, point_domain_id, acl_code, acl_type, created_by, created_dt, updated_by, 
    updated_dt, version
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="BaseColumnList" />
    from tb_exam_point
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Long" >
    delete from tb_exam_point
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yisi.stiku.basedata.entity.TbExamPoint" >
    insert into tb_exam_point (id, code, name, 
      model_count, problem_count, type, 
      stype, parent_id, innercode, 
      level, book_point_id, point_domain_id, 
      acl_code, acl_type, created_by, 
      created_dt, updated_by, updated_dt, 
      version)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{modelCount,jdbcType=INTEGER}, #{problemCount,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{stype,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, #{innercode,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{bookPointId,jdbcType=BIGINT}, #{pointDomainId,jdbcType=BIGINT}, 
      #{aclCode,jdbcType=VARCHAR}, #{aclType,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdDt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedDt,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <update id="updateByPK" parameterType="com.yisi.stiku.basedata.entity.TbExamPoint" >
    update tb_exam_point
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="modelCount != null" >
        model_count = #{modelCount,jdbcType=INTEGER},
      </if>
      <if test="problemCount != null" >
        problem_count = #{problemCount,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="stype != null" >
        stype = #{stype,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="innercode != null" >
        innercode = #{innercode,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="bookPointId != null" >
        book_point_id = #{bookPointId,jdbcType=BIGINT},
      </if>
      <if test="pointDomainId != null" >
        point_domain_id = #{pointDomainId,jdbcType=BIGINT},
      </if>
      <if test="aclCode != null" >
        acl_code = #{aclCode,jdbcType=VARCHAR},
      </if>
      <if test="aclType != null" >
        acl_type = #{aclType,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDt != null" >
        created_dt = #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedDt != null" >
        updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="id" parameterType="com.yisi.stiku.basedata.entity.TbExamPoint" >
    insert into tb_exam_point (id, code, name, 
      model_count, problem_count, type, 
      stype, parent_id, innercode, 
      level, book_point_id, point_domain_id, 
      acl_code, acl_type, created_by, 
      created_dt, updated_by, updated_dt, 
      version)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{modelCount,jdbcType=INTEGER}, #{problemCount,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{stype,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, #{innercode,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{bookPointId,jdbcType=BIGINT}, #{pointDomainId,jdbcType=BIGINT}, 
      #{aclCode,jdbcType=VARCHAR}, #{aclType,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdDt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedDt,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <sql id="pageCondition" >
    <where >
      <trim suffixOverrides="and" >
        <if test="entity != null" >
          		<!-- 写where的判断条件,下边是样例
			<if test="entity.nick != null">
				and nick = #{entity.nick,jdbcType=VARCHAR}
			</if>
			<if test="entity.company != null">
				and company = '${entity.nick}'
			</if>
		-->
        </if>
      </trim>
    </where>
  </sql>
  <select id="getCntByPage" resultType="java.lang.Integer" >
    select 
		count(1)
	from
		TB_EXAM_POINT
	<include refid="pageCondition" />
  </select>
  <select id="findByPage" resultType="com.yisi.stiku.basedata.entity.TbExamPoint" >
    select
		<include refid="BaseColumnList"/>
	from TB_EXAM_POINT
		<include refid="pageCondition"/>
		<if test="pageInfo != null and pageInfo.orderBySql != null">
			${pageInfo.orderBySql}
		</if>
		<if test="pageInfo !=null">
			limit ${pageInfo.startIndex}, ${pageInfo.pagesize}
		</if>
  </select>
  <select id="findAll" resultType="com.yisi.stiku.basedata.entity.TbExamPoint" >
    select
		<include refid="BaseColumnList"/>
	from TB_EXAM_POINT
  </select>
  <select id="findByEntity" resultType="com.yisi.stiku.basedata.entity.TbExamPoint" >
    select
		<include refid="BaseColumnList"/>
	from TB_EXAM_POINT
	<where>
		<trim suffixOverrides="and" >
			<if test="entity.id != null" >
				and id = #{entity.id,jdbcType=BIGINT}
			</if>
			<if test="entity.code != null" >
				and code = #{entity.code,jdbcType=VARCHAR}
			</if>
			<if test="entity.name != null" >
				and name = #{entity.name,jdbcType=VARCHAR}
			</if>
			<if test="entity.modelCount != null" >
				and model_count = #{entity.modelCount,jdbcType=INTEGER}
			</if>
			<if test="entity.problemCount != null" >
				and problem_count = #{entity.problemCount,jdbcType=BIGINT}
			</if>
			<if test="entity.type != null" >
				and type = #{entity.type,jdbcType=INTEGER}
			</if>
			<if test="entity.stype != null" >
				and stype = #{entity.stype,jdbcType=INTEGER}
			</if>
			<if test="entity.parentId != null" >
				and parent_id = #{entity.parentId,jdbcType=BIGINT}
			</if>
			<if test="entity.innercode != null" >
				and innercode = #{entity.innercode,jdbcType=VARCHAR}
			</if>
			<if test="entity.level != null" >
				and level = #{entity.level,jdbcType=INTEGER}
			</if>
			<if test="entity.bookPointId != null" >
				and book_point_id = #{entity.bookPointId,jdbcType=BIGINT}
			</if>
			<if test="entity.pointDomainId != null" >
				and point_domain_id = #{entity.pointDomainId,jdbcType=BIGINT}
			</if>
			<if test="entity.aclCode != null" >
				and acl_code = #{entity.aclCode,jdbcType=VARCHAR}
			</if>
			<if test="entity.aclType != null" >
				and acl_type = #{entity.aclType,jdbcType=VARCHAR}
			</if>
			<if test="entity.createdBy != null" >
				and created_by = #{entity.createdBy,jdbcType=VARCHAR}
			</if>
			<if test="entity.createdDt != null" >
				and created_dt = #{entity.createdDt,jdbcType=TIMESTAMP}
			</if>
			<if test="entity.updatedBy != null" >
				and updated_by = #{entity.updatedBy,jdbcType=VARCHAR}
			</if>
			<if test="entity.updatedDt != null" >
				and updated_dt = #{entity.updatedDt,jdbcType=TIMESTAMP}
			</if>
			<if test="entity.version != null" >
				and version = #{entity.version,jdbcType=INTEGER}
			</if>
		</trim>
	</where>
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
</mapper>