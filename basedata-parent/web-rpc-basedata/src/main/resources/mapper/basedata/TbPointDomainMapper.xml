<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yisi.stiku.basedata.dao.TbPointDomainDao" >
  <resultMap id="BaseResultMap" type="com.yisi.stiku.basedata.entity.TbPointDomain" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="SMALLINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="innercode" property="innercode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="BaseColumnList" >
    id, code, name, type, parent_id, innercode
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="BaseColumnList" />
    from tb_point_domain
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Long" >
    delete from tb_point_domain
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yisi.stiku.basedata.entity.TbPointDomain" >
    insert into tb_point_domain (id, code, name, 
      type, parent_id, innercode
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=SMALLINT}, #{parentId,jdbcType=BIGINT}, #{innercode,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPK" parameterType="com.yisi.stiku.basedata.entity.TbPointDomain" >
    update tb_point_domain
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="innercode != null" >
        innercode = #{innercode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="id" parameterType="com.yisi.stiku.basedata.entity.TbPointDomain" >
    insert into tb_point_domain (id, code, name, 
      type, parent_id, innercode
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=SMALLINT}, #{parentId,jdbcType=BIGINT}, #{innercode,jdbcType=VARCHAR}
      )
  </insert>
  <sql id="pageCondition" >
    <where >
      <trim suffixOverrides="and" >
        <if test="entity != null" >
          		<!-- 写where的判断条件,下边是样例
			<if test="entity.nick != null">
				and nick = #{entity.nick,jdbcType=VARCHAR}
			</if>
			<if test="entity.company != null">
				and company = '${entity.nick}'
			</if>
		-->
        </if>
      </trim>
    </where>
  </sql>
  <select id="getCntByPage" resultType="java.lang.Integer" >
    select 
		count(1)
	from
		TB_POINT_DOMAIN
	<include refid="pageCondition" />
  </select>
  <select id="findByPage" resultType="com.yisi.stiku.basedata.entity.TbPointDomain" >
    select
		<include refid="BaseColumnList"/>
	from TB_POINT_DOMAIN
		<include refid="pageCondition"/>
		<if test="pageInfo != null and pageInfo.orderBySql != null">
			${pageInfo.orderBySql}
		</if>
		<if test="pageInfo !=null">
			limit ${pageInfo.startIndex}, ${pageInfo.pagesize}
		</if>
  </select>
  <select id="findAll" resultType="com.yisi.stiku.basedata.entity.TbPointDomain" >
    select
		<include refid="BaseColumnList"/>
	from TB_POINT_DOMAIN
  </select>
  <select id="findByEntity" resultType="com.yisi.stiku.basedata.entity.TbPointDomain" >
    select
		<include refid="BaseColumnList"/>
	from TB_POINT_DOMAIN
	<where>
		<trim suffixOverrides="and" >
			<if test="entity.id != null" >
				and id = #{entity.id,jdbcType=BIGINT}
			</if>
			<if test="entity.code != null" >
				and code = #{entity.code,jdbcType=VARCHAR}
			</if>
			<if test="entity.name != null" >
				and name = #{entity.name,jdbcType=VARCHAR}
			</if>
			<if test="entity.type != null" >
				and type = #{entity.type,jdbcType=SMALLINT}
			</if>
			<if test="entity.parentId != null" >
				and parent_id = #{entity.parentId,jdbcType=BIGINT}
			</if>
			<if test="entity.innercode != null" >
				and innercode = #{entity.innercode,jdbcType=VARCHAR}
			</if>
		</trim>
	</where>
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
</mapper>