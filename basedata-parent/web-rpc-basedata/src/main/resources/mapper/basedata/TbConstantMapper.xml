<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yisi.stiku.basedata.dao.TbConstantDao" >
  <resultMap id="BaseResultMap" type="com.yisi.stiku.basedata.entity.TbConstant" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="const_type" property="constType" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="BaseColumnList" >
    id, const_type, name, value, note, type_name
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="BaseColumnList" />
    from tb_constant
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Long" >
    delete from tb_constant
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yisi.stiku.basedata.entity.TbConstant" >
    insert into tb_constant (id, const_type, name, 
      value, note, type_name
      )
    values (#{id,jdbcType=BIGINT}, #{constType,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPK" parameterType="com.yisi.stiku.basedata.entity.TbConstant" >
    update tb_constant
    <set >
      <if test="constType != null" >
        const_type = #{constType,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="id" parameterType="com.yisi.stiku.basedata.entity.TbConstant" >
    insert into tb_constant (id, const_type, name, 
      value, note, type_name
      )
    values (#{id,jdbcType=BIGINT}, #{constType,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into tb_constant
		(id,const_type,name,value,note,type_name)
	values 
	<foreach collection="list" item="item" separator="," index="index">
		(#{item.id,jdbcType=BIGINT},#{item.constType,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.value,jdbcType=VARCHAR},#{item.note,jdbcType=VARCHAR},#{item.typeName,jdbcType=VARCHAR})
	</foreach>
  </insert>
  <select id="findByPK_inMaster" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from tb_constant	where id = #{pk, jdbcType=BIGINT}
  </select>
  <select id="getCntByPage" resultType="java.lang.Integer" >
    select 
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		count(1)
	from
		tb_constant
	<include refid="pageCondition" />
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from tb_constant
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByEntity" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from tb_constant
	<where>
		<trim suffixOverrides="and" >
			<if test="entity.id != null" >
				and id = #{entity.id,jdbcType=BIGINT}
			</if>
			<if test="entity.constType != null" >
				and const_type = #{entity.constType,jdbcType=VARCHAR}
			</if>
			<if test="entity.name != null" >
				and name = #{entity.name,jdbcType=VARCHAR}
			</if>
			<if test="entity.value != null" >
				and value = #{entity.value,jdbcType=VARCHAR}
			</if>
			<if test="entity.note != null" >
				and note = #{entity.note,jdbcType=VARCHAR}
			</if>
			<if test="entity.typeName != null" >
				and type_name = #{entity.typeName,jdbcType=VARCHAR}
			</if>
		</trim>
	</where>
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByPage" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from tb_constant
		<include refid="pageCondition"/>
		<if test="pageInfo != null and pageInfo.orderBySql != null">
			${pageInfo.orderBySql}
		</if>
		<if test="pageInfo !=null">
			limit ${pageInfo.startIndex}, ${pageInfo.pagesize}
		</if>
  </select>
  <sql id="pageCondition" >
    <where >
      <trim suffixOverrides="and" >
        <if test="entity != null" >
          		<!-- 写where的判断条件,下边是样例
			<if test="entity.nick != null">
				and nick = #{entity.nick,jdbcType=VARCHAR}
			</if>
			<if test="entity.company != null">
				and company = '${entity.nick}'
			</if>
		-->
        </if>
        <if test="dynamicSql != null">
			and ${dynamicSql}
		</if>
      </trim>
    </where>
  </sql>
</mapper>