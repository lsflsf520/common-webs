<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yisi.stiku.msg.dao.EmailTmplDao" >
  <resultMap id="BaseResultMap" type="com.yisi.stiku.msg.entity.EmailTmpl" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_uptime" property="lastUptime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  <sql id="BaseColumnList" >
    id, title, content, create_time, last_uptime, state
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="BaseColumnList" />
    from email_tmpl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Integer" >
    delete from email_tmpl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yisi.stiku.msg.entity.EmailTmpl" >
    insert into email_tmpl (id, title, content, 
      create_time, last_uptime, state
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUptime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPK" parameterType="com.yisi.stiku.msg.entity.EmailTmpl" >
    update email_tmpl
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUptime != null" >
        last_uptime = #{lastUptime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="id" parameterType="com.yisi.stiku.msg.entity.EmailTmpl" >
    insert into email_tmpl (id, title, content, 
      create_time, last_uptime, state
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUptime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into email_tmpl
		(id,title,content,create_time,last_uptime,state)
	values 
	<foreach collection="list" item="item" separator="," index="index">
		(#{item.id,jdbcType=INTEGER},#{item.title,jdbcType=VARCHAR},#{item.content,jdbcType=VARCHAR},#{item.createTime,jdbcType=TIMESTAMP},#{item.lastUptime,jdbcType=TIMESTAMP},#{item.state,jdbcType=TINYINT})
	</foreach>
  </insert>
  <select id="getCntByPage" resultType="java.lang.Integer" >
    select 
		count(1)
	from
		email_tmpl
	<include refid="pageCondition" />
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    select
		<include refid="BaseColumnList"/>
	from email_tmpl
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByEntity" resultMap="BaseResultMap" >
    select
		<include refid="BaseColumnList"/>
	from email_tmpl
	<where>
		<trim suffixOverrides="and" >
			<if test="entity.id != null" >
				and id = #{entity.id,jdbcType=INTEGER}
			</if>
			<if test="entity.title != null" >
				and title = #{entity.title,jdbcType=VARCHAR}
			</if>
			<if test="entity.content != null" >
				and content = #{entity.content,jdbcType=VARCHAR}
			</if>
			<if test="entity.createTime != null" >
				and create_time = #{entity.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="entity.lastUptime != null" >
				and last_uptime = #{entity.lastUptime,jdbcType=TIMESTAMP}
			</if>
			<if test="entity.state != null" >
				and state = #{entity.state,jdbcType=TINYINT}
			</if>
		</trim>
	</where>
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByPage" resultMap="BaseResultMap" >
    select
		<include refid="BaseColumnList"/>
	from email_tmpl
		<include refid="pageCondition"/>
		<if test="pageInfo != null and pageInfo.orderBySql != null">
			${pageInfo.orderBySql}
		</if>
		<if test="pageInfo !=null">
			limit ${pageInfo.startIndex}, ${pageInfo.pagesize}
		</if>
  </select>
  <sql id="pageCondition" >
    <where >
      <trim suffixOverrides="and" >
        <if test="entity != null" >
			<if test="entity.title != null">
				and title like #{entity.title,jdbcType=VARCHAR}
			</if>
			<if test="entity.state != null">
				and state = #{entity.state,jdbcType=TINYINT}
			</if>
        </if>
        <if test="dynamicSql != null">
			and ${dynamicSql}
		</if>
      </trim>
    </where>
  </sql>
</mapper>